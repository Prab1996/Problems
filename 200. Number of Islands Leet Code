https://leetcode.com/problems/number-of-islands/submissions/861346535/
class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        #List of positions that algo has traveled.
        traveled = set()
        #2D array of islands 
        islands = []
        def mover(x,y,z):
            if (x,y) in traveled: return
            else: traveled.add((x,y))
            if [x,y] in z: return
            else: z.append([x,y])

            if x > -1 and y > -1 and x < len(grid) and y < len(grid[0]):
                if y+1 < len(grid[0]) and grid[x][y+1] == "1":
                    mover(x,y+1,z)
                if x+1 < len(grid) and grid[x+1][y] == "1":
                    mover(x+1,y,z)
                if y-1 > -1 and grid[x][y-1] == "1":
                    mover(x,y-1,z)
                if x-1 > -1 and grid[x-1][y] == "1":
                    mover(x-1,y,z)
            return z
        for x in range(0,len(grid)):
            for y in range(0,len(grid[0])):
                if (x,y) not in traveled and grid[x][y] == "1":
                    islands.append(mover(x,y,[]))

        return len(islands)
